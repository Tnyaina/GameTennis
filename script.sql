-- Séquence pour la table TENNIS_MATCHES
CREATE SEQUENCE TENNIS_MATCHES_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

-- Séquence pour la table TENNIS_POINTS
CREATE SEQUENCE TENNIS_POINTS_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

-- Table des matches
CREATE TABLE TENNIS_MATCHES (
    MATCH_ID NUMBER PRIMARY KEY,
    PLAYER1_NAME VARCHAR2(100) NOT NULL,
    PLAYER2_NAME VARCHAR2(100) NOT NULL,
    WINNER_NAME VARCHAR2(100) NOT NULL,
    MATCH_DATE DATE DEFAULT SYSDATE NOT NULL
);

-- Table des points
CREATE TABLE TENNIS_POINTS (
    POINT_ID NUMBER PRIMARY KEY,
    MATCH_ID NUMBER NOT NULL,
    PLAYER1_SCORE VARCHAR2(2) NOT NULL,
    PLAYER2_SCORE VARCHAR2(2) NOT NULL,
    POINT_TIME TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    CONSTRAINT FK_TENNIS_POINTS_MATCH FOREIGN KEY (MATCH_ID) REFERENCES TENNIS_MATCHES(MATCH_ID)
);

-- Déclencheur pour générer automatiquement MATCH_ID
CREATE OR REPLACE TRIGGER TENNIS_MATCHES_BI
BEFORE INSERT ON TENNIS_MATCHES
FOR EACH ROW
BEGIN
    IF :NEW.MATCH_ID IS NULL THEN
        SELECT TENNIS_MATCHES_SEQ.NEXTVAL INTO :NEW.MATCH_ID FROM DUAL;
    END IF;
END;
/

-- Déclencheur pour générer automatiquement POINT_ID
CREATE OR REPLACE TRIGGER TENNIS_POINTS_BI
BEFORE INSERT ON TENNIS_POINTS
FOR EACH ROW
BEGIN
    IF :NEW.POINT_ID IS NULL THEN
        SELECT TENNIS_POINTS_SEQ.NEXTVAL INTO :NEW.POINT_ID FROM DUAL;
    END IF;
END;
/

-- Procédure pour insérer un nouveau match
CREATE OR REPLACE PROCEDURE INSERT_TENNIS_MATCH (
    p_player1_name IN VARCHAR2,
    p_player2_name IN VARCHAR2,
    p_winner_name IN VARCHAR2,
    p_match_id OUT NUMBER
) AS
BEGIN
    INSERT INTO TENNIS_MATCHES (PLAYER1_NAME, PLAYER2_NAME, WINNER_NAME)
    VALUES (p_player1_name, p_player2_name, p_winner_name)
    RETURNING MATCH_ID INTO p_match_id;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END;
/

-- Procédure pour insérer un point
CREATE OR REPLACE PROCEDURE INSERT_TENNIS_POINT (
    p_match_id IN NUMBER,
    p_player1_score IN VARCHAR2,
    p_player2_score IN VARCHAR2
) AS
BEGIN
    INSERT INTO TENNIS_POINTS (MATCH_ID, PLAYER1_SCORE, PLAYER2_SCORE)
    VALUES (p_match_id, p_player1_score, p_player2_score);

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END;
/

CREATE OR REPLACE VIEW V_TENNIS_HISTORY AS
SELECT 
    m.MATCH_ID,
    m.PLAYER1_NAME,
    m.PLAYER2_NAME,
    m.WINNER_NAME,
    m.MATCH_DATE,
    (
        SELECT LISTAGG(p.PLAYER1_SCORE || '-' || p.PLAYER2_SCORE, ', ') 
               WITHIN GROUP (ORDER BY p.POINT_TIME)
        FROM TENNIS_POINTS p
        WHERE p.MATCH_ID = m.MATCH_ID
    ) AS SCORE_PROGRESSION
FROM TENNIS_MATCHES m
ORDER BY m.MATCH_DATE DESC;
/
